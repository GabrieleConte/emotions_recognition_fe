events {}

http {
    include /etc/nginx/mime.types;
    sendfile on;
    client_max_body_size 50M;
    
    # WebSocket upgrade mapping
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80;
        server_name _;

        location / {
            root /usr/share/nginx/html/;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }
        
        # API reverse proxy for main backend (auth, profile, images)
        location /api/v1/ {
            proxy_pass __backend_address__;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host __backend_host__;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host __frontend_domain__;
            proxy_set_header Origin https://__frontend_domain__;
            proxy_set_header Referer https://__frontend_domain__;
            proxy_cache_bypass $http_upgrade;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
            
            # Remove any nginx-added CORS headers to avoid conflicts
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Max-Age;
        }

        location /api/classifier/ {
            proxy_pass __classifier_address__;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host __classifier_host__;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host __frontend_domain__;
            proxy_set_header Origin https://__frontend_domain__;
            proxy_set_header Referer https://__frontend_domain__;
            proxy_set_header Cookie $http_cookie;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
            
            # Remove any nginx-added CORS headers to avoid conflicts
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Max-Age;
        }

        # Configura la compressione gzip per migliorare le performance
        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # Ottimizzazioni di sicurezza
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    }
}